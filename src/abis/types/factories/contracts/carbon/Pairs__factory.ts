/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Pairs, PairsInterface } from "../../../contracts/carbon/Pairs";

const _abi = [
  {
    inputs: [],
    name: "PairAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PairDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "pairId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
] as const;

export class Pairs__factory {
  static readonly abi = _abi;
  static createInterface(): PairsInterface {
    return new utils.Interface(_abi) as PairsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pairs {
    return new Contract(address, _abi, signerOrProvider) as Pairs;
  }
}
