/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestLogic,
  TestLogicInterface,
} from "../../../contracts/helpers/TestLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "initVersion",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newVersion",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "arg1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "arg2",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "arg3",
        type: "string",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "checkVersion",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "postUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newData",
        type: "uint16",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ee1380380610ee183398101604081905261002f9161003b565b61ffff16608052610066565b60006020828403121561004d57600080fd5b815161ffff8116811461005f57600080fd5b9392505050565b608051610e596100886000396000818161019901526105170152610e596000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639010d07c11610097578063ca15c87311610066578063ca15c8731461023f578063d547741f14610252578063debcf1fe14610265578063f48a24bb1461027857600080fd5b80639010d07c146101d357806391d14854146101fe57806393867fb514610211578063a217fddf1461023757600080fd5b806336568abe116100d357806336568abe1461017e57806354fd4d501461019157806373d4a13a146101c35780638129fc1c146101cb57600080fd5b806301ffc9a714610105578063158ef93e1461012d578063248a9ca3146101385780632f2ff15d14610169575b600080fd5b610118610113366004610b1f565b61028f565b60405190151581526020015b60405180910390f35b60fb5460ff16610118565b61015b610146366004610b49565b60009081526065602052604090206001015490565b604051908152602001610124565b61017c610177366004610b62565b6102ba565b005b61017c61018c366004610b62565b6102e4565b60405161ffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610124565b60fc5461015b565b61017c610367565b6101e66101e1366004610b9e565b610478565b6040516001600160a01b039091168152602001610124565b61011861020c366004610b62565b610497565b7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509661015b565b61015b600081565b61015b61024d366004610b49565b6104c2565b61017c610260366004610b62565b6104d9565b61017c610273366004610bc0565b6104fe565b61017c610286366004610c4a565b61ffff1660fc55565b60006001600160e01b03198216635a05180f60e01b14806102b457506102b482610589565b92915050565b6000828152606560205260409020600101546102d5816105be565b6102df83836105c8565b505050565b6001600160a01b03811633146103595760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61036382826105ea565b5050565b600054610100900460ff16158080156103875750600054600160ff909116105b806103a15750303b1580156103a1575060005460ff166001145b6104045760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610350565b6000805460ff191660011790558015610427576000805461ff0019166101001790555b61042f61060c565b8015610475576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6000828152609760205260408120610490908361063d565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526097602052604081206102b490610649565b6000828152606560205260409020600101546104f4816105be565b6102df83836105ea565b60c9546000906105139061ffff166001610c84565b90507f000000000000000000000000000000000000000000000000000000000000000084801561054b57508061ffff168261ffff1614155b156105685760405162dc149f60e41b815260040160405180910390fd5b84610571578091505b60c9805461ffff191661ffff84161790555050505050565b60006001600160e01b03198216637965db0b60e01b14806102b457506301ffc9a760e01b6001600160e01b03198316146102b4565b6104758133610653565b6105d282826106ac565b60008281526097602052604090206102df9082610732565b6105f48282610747565b60008281526097602052604090206102df90826107ae565b600054610100900460ff166106335760405162461bcd60e51b815260040161035090610c9f565b61063b6107c3565b565b600061049083836107fe565b60006102b4825490565b61065d8282610497565b6103635761066a81610828565b61067583602061083a565b604051602001610686929190610d0e565b60408051601f198184030181529082905262461bcd60e51b825261035091600401610d83565b6106b68282610497565b6103635760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556106ee3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610490836001600160a01b0384166109d6565b6107518282610497565b156103635760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610490836001600160a01b038416610a25565b600054610100900460ff166107ea5760405162461bcd60e51b815260040161035090610c9f565b60fb805460ff19166001179055606460fc55565b600082600001828154811061081557610815610db6565b9060005260206000200154905092915050565b60606102b46001600160a01b03831660145b60606000610849836002610dcc565b610854906002610de3565b67ffffffffffffffff81111561086c5761086c610df6565b6040519080825280601f01601f191660200182016040528015610896576020820181803683370190505b509050600360fc1b816000815181106108b1576108b1610db6565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106108e0576108e0610db6565b60200101906001600160f81b031916908160001a9053506000610904846002610dcc565b61090f906001610de3565b90505b6001811115610987576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061094357610943610db6565b1a60f81b82828151811061095957610959610db6565b60200101906001600160f81b031916908160001a90535060049490941c9361098081610e0c565b9050610912565b5083156104905760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610350565b6000818152600183016020526040812054610a1d575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102b4565b5060006102b4565b60008181526001830160205260408120548015610b0e576000610a49600183610e23565b8554909150600090610a5d90600190610e23565b9050818114610ac2576000866000018281548110610a7d57610a7d610db6565b9060005260206000200154905080876000018481548110610aa057610aa0610db6565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610ad357610ad3610e36565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102b4565b60009150506102b4565b5092915050565b600060208284031215610b3157600080fd5b81356001600160e01b03198116811461049057600080fd5b600060208284031215610b5b57600080fd5b5035919050565b60008060408385031215610b7557600080fd5b8235915060208301356001600160a01b0381168114610b9357600080fd5b809150509250929050565b60008060408385031215610bb157600080fd5b50508035926020909101359150565b600080600060408486031215610bd557600080fd5b83358015158114610be557600080fd5b9250602084013567ffffffffffffffff80821115610c0257600080fd5b818601915086601f830112610c1657600080fd5b813581811115610c2557600080fd5b876020828501011115610c3757600080fd5b6020830194508093505050509250925092565b600060208284031215610c5c57600080fd5b813561ffff8116811461049057600080fd5b634e487b7160e01b600052601160045260246000fd5b61ffff818116838216019080821115610b1857610b18610c6e565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610d05578181015183820152602001610ced565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610d46816017850160208801610cea565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610d77816028840160208801610cea565b01602801949350505050565b6020815260008251806020840152610da2816040850160208701610cea565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176102b4576102b4610c6e565b808201808211156102b4576102b4610c6e565b634e487b7160e01b600052604160045260246000fd5b600081610e1b57610e1b610c6e565b506000190190565b818103818111156102b4576102b4610c6e565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000813000a";

type TestLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestLogic__factory extends ContractFactory {
  constructor(...args: TestLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initVersion: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<TestLogic> {
    return super.deploy(initVersion, overrides || {}) as Promise<TestLogic>;
  }
  override getDeployTransaction(
    initVersion: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(initVersion, overrides || {});
  }
  override attach(address: string): TestLogic {
    return super.attach(address) as TestLogic;
  }
  override connect(signer: Signer): TestLogic__factory {
    return super.connect(signer) as TestLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestLogicInterface {
    return new utils.Interface(_abi) as TestLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestLogic {
    return new Contract(address, _abi, signerOrProvider) as TestLogic;
  }
}
