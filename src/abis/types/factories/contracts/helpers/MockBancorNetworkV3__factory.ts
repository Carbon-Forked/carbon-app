/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBancorNetworkV3,
  MockBancorNetworkV3Interface,
} from "../../../contracts/helpers/MockBancorNetworkV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bnt",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "profit",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFlashLoanReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "",
        type: "address",
      },
    ],
    name: "collectionByPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
    ],
    name: "resetCollectionByPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
    ],
    name: "setCollectionByPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tradeBySourceAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516108d23803806108d283398101604081905261002f9161004a565b6001600160a01b0390921660805260a052151560c05261009e565b60008060006060848603121561005f57600080fd5b83516001600160a01b038116811461007657600080fd5b602085015160408601519194509250801515811461009357600080fd5b809150509250925092565b60805160a05160c0516108016100d160003960006101e701526000818161021001526102410152600050506108016000f3fe6080604052600436106100435760003560e01c8063438bb6481461004f5780635d7b7e93146100935780639bca0e70146100d8578063d3a4acd31461012b57600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b5061009161006a366004610698565b6001600160a01b0316600090815260208190526040902080546001600160a01b0319169055565b005b34801561009f57600080fd5b506100916100ae366004610698565b6001600160a01b0316600081815260208190526040902080546001600160a01b0319169091179055565b3480156100e457600080fd5b5061010e6100f3366004610698565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013e6101393660046106bc565b61014c565b604051908152602001610122565b60008360000361016f57604051637c946ed760e01b815260040160405180910390fd5b61017d878787338789610188565b979650505050505050565b6000428310156101ce5760405162461bcd60e51b815260206004820152600c60248201526b14ddd85c081d1a5b595bdd5d60a21b60448201526064015b60405180910390fd5b6101e36001600160a01b0388168530886102cd565b60007f00000000000000000000000000000000000000000000000000000000000000001561023c576102357f000000000000000000000000000000000000000000000000000000000000000087610739565b9050610269565b6102667f00000000000000000000000000000000000000000000000000000000000000008761074c565b90505b828110156102b95760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74546172676574416d6f756e74000000000000000060448201526064016101c5565b61017d6001600160a01b03881686836102fd565b8015806102de57506102de84610367565b6102f7576102f76001600160a01b038516848484610390565b50505050565b8060000361030a57505050565b61031383610367565b1561034e576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156102f7573d6000803e3d6000fd5b6103626001600160a01b03841683836103fb565b505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee145b92915050565b6040516001600160a01b03808516602483015283166044820152606481018290526102f79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261042b565b6040516001600160a01b03831660248201526044810182905261036290849063a9059cbb60e01b906064016103c4565b6000610480826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105009092919063ffffffff16565b90508051600014806104a15750808060200190518101906104a1919061075f565b6103625760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b606061050f8484600085610517565b949350505050565b6060824710156105785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101c5565b600080866001600160a01b0316858760405161059491906107a5565b60006040518083038185875af1925050503d80600081146105d1576040519150601f19603f3d011682016040523d82523d6000602084013e6105d6565b606091505b509150915061017d878383876060831561065157825160000361064a576001600160a01b0385163b61064a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b508161050f565b61050f83838151156106665781518083602001fd5b8060405162461bcd60e51b81526004016101c591906107c1565b6001600160a01b038116811461069557600080fd5b50565b6000602082840312156106aa57600080fd5b81356106b581610680565b9392505050565b60008060008060008060c087890312156106d557600080fd5b86356106e081610680565b955060208701356106f081610680565b945060408701359350606087013592506080870135915060a087013561071581610680565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b8082018082111561038a5761038a610723565b8181038181111561038a5761038a610723565b60006020828403121561077157600080fd5b815180151581146106b557600080fd5b60005b8381101561079c578181015183820152602001610784565b50506000910152565b600082516107b7818460208701610781565b9190910192915050565b60208152600082518060208401526107e0816040850160208701610781565b601f01601f1916919091016040019291505056fea164736f6c6343000813000a";

type MockBancorNetworkV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBancorNetworkV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBancorNetworkV3__factory extends ContractFactory {
  constructor(...args: MockBancorNetworkV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnt: string,
    outputAmount: BigNumberish,
    profit: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<MockBancorNetworkV3> {
    return super.deploy(
      bnt,
      outputAmount,
      profit,
      overrides || {}
    ) as Promise<MockBancorNetworkV3>;
  }
  override getDeployTransaction(
    bnt: string,
    outputAmount: BigNumberish,
    profit: boolean,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnt,
      outputAmount,
      profit,
      overrides || {}
    );
  }
  override attach(address: string): MockBancorNetworkV3 {
    return super.attach(address) as MockBancorNetworkV3;
  }
  override connect(signer: Signer): MockBancorNetworkV3__factory {
    return super.connect(signer) as MockBancorNetworkV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBancorNetworkV3Interface {
    return new utils.Interface(_abi) as MockBancorNetworkV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBancorNetworkV3 {
    return new Contract(address, _abi, signerOrProvider) as MockBancorNetworkV3;
  }
}
