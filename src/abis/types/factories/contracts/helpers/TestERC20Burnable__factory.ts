/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20Burnable,
  TestERC20BurnableInterface,
} from "../../../contracts/helpers/TestERC20Burnable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "newDecimals",
        type: "uint8",
      },
    ],
    name: "updateDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526009805460ff191660121790553480156200001f57600080fd5b50604051620019103803806200191083398101604081905262000042916200036b565b8282828280604051806040016040528060018152602001603160f81b815250858581600390816200007491906200046c565b5060046200008382826200046c565b50620000959150839050600562000156565b61012052620000a681600662000156565b61014052815160208084019190912060e052815190820120610100524660a0526200013460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200014a33826200018f565b505050505050620005b4565b600060208351101562000176576200016e8362000256565b905062000189565b816200018384826200046c565b5060ff90505b92915050565b6001600160a01b038216620001eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620001ff919062000538565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f8151111562000284578260405163305a27a960e01b8152600401620001e291906200055a565b805162000291826200058f565b179392505050565b505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002d1578181015183820152602001620002b7565b50506000910152565b600082601f830112620002ec57600080fd5b81516001600160401b03808211156200030957620003096200029e565b604051601f8301601f19908116603f011681019082821181831017156200033457620003346200029e565b816040528381528660208588010111156200034e57600080fd5b62000361846020830160208901620002b4565b9695505050505050565b6000806000606084860312156200038157600080fd5b83516001600160401b03808211156200039957600080fd5b620003a787838801620002da565b94506020860151915080821115620003be57600080fd5b50620003cd86828701620002da565b925050604084015190509250925092565b600181811c90821680620003f357607f821691505b6020821081036200041457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029957600081815260208120601f850160051c81016020861015620004435750805b601f850160051c820191505b8181101562000464578281556001016200044f565b505050505050565b81516001600160401b038111156200048857620004886200029e565b620004a081620004998454620003de565b846200041a565b602080601f831160018114620004d85760008415620004bf5750858301515b600019600386901b1c1916600185901b17855562000464565b600085815260208120601f198616915b828110156200050957888601518255948401946001909101908401620004e8565b5085821015620005285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200018957634e487b7160e01b600052601160045260246000fd5b60208152600082518060208401526200057b816040850160208701620002b4565b601f01601f19169190910160400192915050565b80516020808301519190811015620004145760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516113016200060f60003960006104480152600061041d01526000610ae101526000610ab901526000610a1401526000610a3e01526000610a6801526113016000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610259578063a457c2d714610261578063a9059cbb14610274578063d505accf14610287578063dd62ed3e1461029a57600080fd5b806370a08231146101ef57806379cc6790146102185780637ecebe001461022b57806384b0196e1461023e57600080fd5b806323b872dd116100e957806323b872dd14610194578063313ce567146101a75780633644e515146101c157806339509351146101c957806342966c68146101dc57600080fd5b806306fdde031461011b578063095ea7b3146101395780630ce83a611461015c57806318160ddd14610182575b600080fd5b6101236102ad565b604051610130919061103f565b60405180910390f35b61014c610147366004611075565b61033f565b6040519015158152602001610130565b61018061016a3660046110b0565b6009805460ff191660ff92909216919091179055565b005b6002545b604051908152602001610130565b61014c6101a23660046110cb565b610359565b6101af61037d565b60405160ff9091168152602001610130565b610186610390565b61014c6101d7366004611075565b61039a565b6101806101ea366004611107565b6103bc565b6101866101fd366004611120565b6001600160a01b031660009081526020819052604090205490565b610180610226366004611075565b6103c9565b610186610239366004611120565b6103f1565b61024661040f565b604051610130979695949392919061113b565b610123610498565b61014c61026f366004611075565b6104a7565b61014c610282366004611075565b610527565b6101806102953660046111d1565b610535565b6101866102a836600461123b565b610699565b6060600380546102bc9061126e565b80601f01602080910402602001604051908101604052809291908181526020018280546102e89061126e565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b60003361034d8185856106c4565b60019150505b92915050565b6000336103678582856107e9565b610372858585610863565b506001949350505050565b600061038b60095460ff1690565b905090565b600061038b610a07565b60003361034d8185856103ad8383610699565b6103b791906112b8565b6106c4565b6103c63382610b32565b50565b6103e38233836103d98633610699565b6103b791906112cb565b6103ed8282610b32565b5050565b6001600160a01b038116600090815260076020526040812054610353565b6000606080828080836104437f00000000000000000000000000000000000000000000000000000000000000006005610c5c565b61046e7f00000000000000000000000000000000000000000000000000000000000000006006610c5c565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102bc9061126e565b600033816104b58286610699565b90508381101561051a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61037282868684036106c4565b60003361034d818585610863565b834211156105855760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610511565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105b48c610d07565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061060f82610d2f565b9050600061061f82878787610d5c565b9050896001600160a01b0316816001600160a01b0316146106825760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610511565b61068d8a8a8a6106c4565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166107265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610511565b6001600160a01b0382166107875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610511565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107f58484610699565b9050600019811461085d57818110156108505760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610511565b61085d84848484036106c4565b50505050565b6001600160a01b0383166108c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610511565b6001600160a01b0382166109295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610511565b6001600160a01b038316600090815260208190526040902054818110156109a15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610511565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361085d565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610a6057507f000000000000000000000000000000000000000000000000000000000000000046145b15610a8a57507f000000000000000000000000000000000000000000000000000000000000000090565b61038b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610b925760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610511565b6001600160a01b03821660009081526020819052604090205481811015610c065760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610511565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107dc565b606060ff8314610c7657610c6f83610d84565b9050610353565b818054610c829061126e565b80601f0160208091040260200160405190810160405280929190818152602001828054610cae9061126e565b8015610cfb5780601f10610cd057610100808354040283529160200191610cfb565b820191906000526020600020905b815481529060010190602001808311610cde57829003601f168201915b50505050509050610353565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000610353610d3c610a07565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610d6d87878787610dc3565b91509150610d7a81610e87565b5095945050505050565b60606000610d9183610fd1565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610dfa5750600090506003610e7e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e4e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e7757600060019250925050610e7e565b9150600090505b94509492505050565b6000816004811115610e9b57610e9b6112de565b03610ea35750565b6001816004811115610eb757610eb76112de565b03610f045760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610511565b6002816004811115610f1857610f186112de565b03610f655760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610511565b6003816004811115610f7957610f796112de565b036103c65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610511565b600060ff8216601f81111561035357604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561101f57602081850181015186830182015201611003565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110526020830184610ff9565b9392505050565b80356001600160a01b038116811461107057600080fd5b919050565b6000806040838503121561108857600080fd5b61109183611059565b946020939093013593505050565b803560ff8116811461107057600080fd5b6000602082840312156110c257600080fd5b6110528261109f565b6000806000606084860312156110e057600080fd5b6110e984611059565b92506110f760208501611059565b9150604084013590509250925092565b60006020828403121561111957600080fd5b5035919050565b60006020828403121561113257600080fd5b61105282611059565b60ff60f81b881681526000602060e08184015261115b60e084018a610ff9565b838103604085015261116d818a610ff9565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156111bf578351835292840192918401916001016111a3565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156111ec57600080fd5b6111f588611059565b965061120360208901611059565b9550604088013594506060880135935061121f6080890161109f565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561124e57600080fd5b61125783611059565b915061126560208401611059565b90509250929050565b600181811c9082168061128257607f821691505b602082108103610d2957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610353576103536112a2565b81810381811115610353576103536112a2565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";

type TestERC20BurnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20BurnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20Burnable__factory extends ContractFactory {
  constructor(...args: TestERC20BurnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<TestERC20Burnable> {
    return super.deploy(
      name,
      symbol,
      totalSupply,
      overrides || {}
    ) as Promise<TestERC20Burnable>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): TestERC20Burnable {
    return super.attach(address) as TestERC20Burnable;
  }
  override connect(signer: Signer): TestERC20Burnable__factory {
    return super.connect(signer) as TestERC20Burnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20BurnableInterface {
    return new utils.Interface(_abi) as TestERC20BurnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20Burnable {
    return new Contract(address, _abi, signerOrProvider) as TestERC20Burnable;
  }
}
