/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestStrategies,
  TestStrategiesInterface,
} from "../../../contracts/helpers/TestStrategies";

const _abi = [
  {
    inputs: [],
    name: "BalanceMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "GreaterThanMaxInput",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientCapacity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTradeActionAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTradeActionStrategyId",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerThanMinReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAmountMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "OutDated",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "Token",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "prevFeePPM",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newFeePPM",
        type: "uint32",
      },
    ],
    name: "PairTradingFeePPMUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "reason",
        type: "uint8",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "tradingFeeAmount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "byTargetAmount",
        type: "bool",
      },
    ],
    name: "TokensTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "prevFeePPM",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newFeePPM",
        type: "uint32",
      },
    ],
    name: "TradingFeePPMUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "expandedRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "isValidRate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "tradeBySourceAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "tradeByTargetAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806361c8b5571461005157806392fd04ca14610077578063ab770e74146100a2578063b28087b6146100b5575b600080fd5b61006461005f366004610713565b6100d8565b6040519081526020015b60405180910390f35b61008a610085366004610760565b6100f2565b6040516001600160801b03909116815260200161006e565b61008a6100b0366004610760565b61010a565b6100c86100c3366004610713565b610122565b604051901515815260200161006e565b600065ffffffffffff8216600160301b83041b5b92915050565b60008061010184846000610134565b95945050505050565b60008061011984846001610134565b50949350505050565b6000600160301b8083041c15156100ec565b600080600085600001516001600160801b03169050600086602001516001600160801b031690506000610184886040015167ffffffffffffffff1665ffffffffffff8116600160301b9091041b90565b905060006101af896060015167ffffffffffffffff1665ffffffffffff8116600160301b9091041b90565b905086156101df576101d56101d0896001600160801b03168686868661020a565b6102e8565b95508794506101fe565b8795506101fb6101d0896001600160801b031686868686610359565b94505b50505050935093915050565b60008260000361025d578160000361023557604051634e305c4b60e01b815260040160405180910390fd5b61025686610247600160301b80610838565b6102518580610838565b610479565b9050610101565b600160301b8402858402838602016000610277868a610838565b610281908361084f565b9050600061028f84856104d2565b9050600061029d84846104d2565b905060006102ab8383610501565b905060006102ba878884610479565b905060006102c9878785610517565b90506102d68e8383610479565b9e9d5050505050505050505050505050565b60006001600160801b038211156103555760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840160405180910390fd5b5090565b6000826000036103a5578160000361038457604051634e305c4b60e01b815260040160405180910390fd5b610256866103928480610838565b6103a0600160301b80610838565b610517565b600160301b84028584028386020160006103bf8983610838565b905060006103cd84856104d2565b905060006103db83896104d2565b905060006103e98383610501565b905060006103f8878884610479565b90506000610407868c85610479565b905060008061041684846105f2565b915091508115610445576104348961042e878b610862565b83610517565b9a5050505050505050505050610101565b6104508a8b8a610479565b61045a908e610884565b610464908a610862565b9a505050505050505050505095945050505050565b600080610487858585610517565b9050600061049686868661061b565b11156104c85760001981106104be57604051631a93c68960e11b815260040160405180910390fd5b60010190506104cb565b90505b9392505050565b60008060006104e18585610636565b91509150801982116104f65781600101610101565b506002019392505050565b600081831161051057816104cb565b5090919050565b60008060006105268686610636565b915091508160000361054b578381816105415761054161080c565b04925050506104cb565b83821061056b57604051631a93c68960e11b815260040160405180910390fd5b600061057887878761061b565b905060008061058885858561066f565b91509150816000036105b0578681816105a3576105a361080c565b04955050505050506104cb565b60008781038816906105c384848461069f565b905060006105df838b816105d9576105d961080c565b046106dc565b919091029b9a5050505050505050505050565b6000808383018481101561060d576000809250925050610614565b6001925090505b9250929050565b6000818061062b5761062b61080c565b838509949350505050565b60008060006106458585610704565b905084840280821061065e579081900392509050610614565b600181830303969095509350505050565b6000808284106106855750839050818303610697565b61069060018661084f565b9150508183035b935093915050565b6000806106bd83808303816106b6576106b661080c565b0460010190565b90508284816106ce576106ce61080c565b048186021795945050505050565b60006001815b60088110156106fd57838202600203820291506001016106e2565b5092915050565b60006000198284099392505050565b60006020828403121561072557600080fd5b5035919050565b80356001600160801b038116811461074357600080fd5b919050565b803567ffffffffffffffff8116811461074357600080fd5b60008082840360a081121561077457600080fd5b608081121561078257600080fd5b506040516080810181811067ffffffffffffffff821117156107b457634e487b7160e01b600052604160045260246000fd5b6040526107c08461072c565b81526107ce6020850161072c565b60208201526107df60408501610748565b60408201526107f060608501610748565b606082015291506108036080840161072c565b90509250929050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176100ec576100ec610822565b818103818111156100ec576100ec610822565b60008261087f57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156100ec576100ec61082256fea164736f6c6343000813000a";

type TestStrategiesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStrategiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStrategies__factory extends ContractFactory {
  constructor(...args: TestStrategiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestStrategies> {
    return super.deploy(overrides || {}) as Promise<TestStrategies>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestStrategies {
    return super.attach(address) as TestStrategies;
  }
  override connect(signer: Signer): TestStrategies__factory {
    return super.connect(signer) as TestStrategies__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStrategiesInterface {
    return new utils.Interface(_abi) as TestStrategiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStrategies {
    return new Contract(address, _abi, signerOrProvider) as TestStrategies;
  }
}
