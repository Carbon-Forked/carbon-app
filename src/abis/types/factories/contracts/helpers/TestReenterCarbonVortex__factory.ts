/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestReenterCarbonVortex,
  TestReenterCarbonVortexInterface,
} from "../../../contracts/helpers/TestReenterCarbonVortex";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICarbonVortex",
        name: "carbonVortexInit",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "Token[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "tryReenterCarbonVortexExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "targetAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxInput",
        type: "uint128",
      },
    ],
    name: "tryReenterCarbonVortexTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161043738038061043783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161039f61009860003960008181604f0152818161010801526101ab015261039f6000f3fe60806040526004361061002d5760003560e01c80631ca3aeb4146100be57806374807c1e146100de57600080fd5b366100b9576040805160008152602081019182905263260506fd60e11b9091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c0a0dfa610089836024810161020e565b600060405180830381600087803b1580156100a357600080fd5b505af11580156100b7573d6000803e3d6000fd5b005b600080fd5b3480156100ca57600080fd5b506100b76100d936600461025b565b6100f1565b6100b76100ec366004610303565b610175565b60405163260506fd60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634c0a0dfa9061013f9085908590600401610346565b600060405180830381600087803b15801561015957600080fd5b505af115801561016d573d6000803e3d6000fd5b505050505050565b604051631f4d953d60e31b81526001600160a01b0384811660048301526001600160801b038085166024840152831660448301527f0000000000000000000000000000000000000000000000000000000000000000169063fa6ca9e89034906064016000604051808303818588803b1580156101f057600080fd5b505af1158015610204573d6000803e3d6000fd5b5050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561024f5783516001600160a01b03168352928401929184019160010161022a565b50909695505050505050565b6000806020838503121561026e57600080fd5b823567ffffffffffffffff8082111561028657600080fd5b818501915085601f83011261029a57600080fd5b8135818111156102a957600080fd5b8660208260051b85010111156102be57600080fd5b60209290920196919550909350505050565b80356001600160a01b03811681146102e757600080fd5b919050565b80356001600160801b03811681146102e757600080fd5b60008060006060848603121561031857600080fd5b610321846102d0565b925061032f602085016102ec565b915061033d604085016102ec565b90509250925092565b60208082528181018390526000908460408401835b86811015610387576001600160a01b03610374846102d0565b168252918301919083019060010161035b565b50969550505050505056fea164736f6c6343000813000a";

type TestReenterCarbonVortexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestReenterCarbonVortexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestReenterCarbonVortex__factory extends ContractFactory {
  constructor(...args: TestReenterCarbonVortexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    carbonVortexInit: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestReenterCarbonVortex> {
    return super.deploy(
      carbonVortexInit,
      overrides || {}
    ) as Promise<TestReenterCarbonVortex>;
  }
  override getDeployTransaction(
    carbonVortexInit: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(carbonVortexInit, overrides || {});
  }
  override attach(address: string): TestReenterCarbonVortex {
    return super.attach(address) as TestReenterCarbonVortex;
  }
  override connect(signer: Signer): TestReenterCarbonVortex__factory {
    return super.connect(signer) as TestReenterCarbonVortex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReenterCarbonVortexInterface {
    return new utils.Interface(_abi) as TestReenterCarbonVortexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReenterCarbonVortex {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestReenterCarbonVortex;
  }
}
