/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestCarbonController,
  TestCarbonControllerInterface,
} from "../../../contracts/helpers/TestCarbonController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVoucher",
        name: "initVoucher",
        type: "address",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlineExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "GreaterThanMaxInput",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientCapacity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientNativeTokenReceived",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidIndices",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTradeActionAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTradeActionStrategyId",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerThanMinReturn",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeAmountMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "OutDated",
    type: "error",
  },
  {
    inputs: [],
    name: "Overflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PairAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PairDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownDelegator",
    type: "error",
  },
  {
    inputs: [],
    name: "UnnecessaryNativeTokenReceived",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "Token",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "pairId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "prevFeePPM",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newFeePPM",
        type: "uint32",
      },
    ],
    name: "PairTradingFeePPMUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
    ],
    name: "StrategyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
    ],
    name: "StrategyDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order0",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order1",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "reason",
        type: "uint8",
      },
    ],
    name: "StrategyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "tradingFeeAmount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "byTargetAmount",
        type: "bool",
      },
    ],
    name: "TokensTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "prevFeePPM",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newFeePPM",
        type: "uint32",
      },
    ],
    name: "TradingFeePPMUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
    ],
    name: "accumulatedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "associateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "batchAssociateTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct TradeAction[]",
        name: "tradeActions",
        type: "tuple[]",
      },
    ],
    name: "calculateTradeSourceAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct TradeAction[]",
        name: "tradeActions",
        type: "tuple[]",
      },
    ],
    name: "calculateTradeTargetAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controllerType",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "id",
            type: "uint128",
          },
          {
            internalType: "Token[2]",
            name: "tokens",
            type: "address[2]",
          },
        ],
        internalType: "struct Pair",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        internalType: "struct Order[2]",
        name: "orders",
        type: "tuple[2]",
      },
    ],
    name: "createStrategy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
    ],
    name: "deleteStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "pair",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "id",
            type: "uint128",
          },
          {
            internalType: "Token[2]",
            name: "tokens",
            type: "address[2]",
          },
        ],
        internalType: "struct Pair",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "pairTradingFeePPM",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairs",
    outputs: [
      {
        internalType: "Token[2][]",
        name: "",
        type: "address[2][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "checkVersion",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "postUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "roleFeesManager",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "newPairTradingFeePPM",
        type: "uint32",
      },
    ],
    name: "setPairTradingFeePPM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "newTradingFeePPM",
        type: "uint32",
      },
    ],
    name: "setTradingFeePPM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndex",
        type: "uint256",
      },
    ],
    name: "strategiesByPair",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "Token[2]",
            name: "tokens",
            type: "address[2]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "y",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "z",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "A",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "B",
                type: "uint64",
              },
            ],
            internalType: "struct Order[2]",
            name: "orders",
            type: "tuple[2]",
          },
        ],
        internalType: "struct Strategy[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token0",
        type: "address",
      },
      {
        internalType: "Token",
        name: "token1",
        type: "address",
      },
    ],
    name: "strategiesByPairCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "strategy",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "Token[2]",
            name: "tokens",
            type: "address[2]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "y",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "z",
                type: "uint128",
              },
              {
                internalType: "uint64",
                name: "A",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "B",
                type: "uint64",
              },
            ],
            internalType: "struct Order[2]",
            name: "orders",
            type: "tuple[2]",
          },
        ],
        internalType: "struct Strategy",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
    ],
    name: "testAccumulatedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "testSetAccumulatedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct TradeAction[]",
        name: "tradeActions",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "minReturn",
        type: "uint128",
      },
    ],
    name: "tradeBySourceAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "sourceToken",
        type: "address",
      },
      {
        internalType: "Token",
        name: "targetToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
        ],
        internalType: "struct TradeAction[]",
        name: "tradeActions",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "maxInput",
        type: "uint128",
      },
    ],
    name: "tradeByTargetAmount",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingFeePPM",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strategyId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        internalType: "struct Order[2]",
        name: "currentOrders",
        type: "tuple[2]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "y",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "z",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "A",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "B",
            type: "uint64",
          },
        ],
        internalType: "struct Order[2]",
        name: "newOrders",
        type: "tuple[2]",
      },
    ],
    name: "updateStrategy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Token",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162005e9a38038062005e9a83398101604081905262000034916200088e565b6001600160a01b03811660805281816200004e826200006f565b6001600160a01b03821660a052620000656200009a565b50505050620008cd565b6001600160a01b038116620000975760405163e6c4247b60e01b815260040160405180910390fd5b50565b600054610100900460ff1615808015620000bb5750600054600160ff909116105b80620000d75750303b158015620000d7575060005460ff166001145b620001405760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000164576000805461ff0019166101001790555b6200016e620001b7565b801562000097576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b600054610100900460ff16620002135760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b6200021d62000247565b62000227620002ad565b6200023162000313565b6200023b62000383565b62000245620003e9565b565b600054610100900460ff16620002a35760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b6200024562000480565b600054610100900460ff16620003095760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b62000245620004dc565b600054610100900460ff166200036f5760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b6200037962000480565b6200024562000545565b600054610100900460ff16620003df5760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b62000245620005f3565b600054610100900460ff16620004455760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b620002457f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b1660008051602062005e5a83398151915262000657565b600054610100900460ff16620002455760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b600054610100900460ff16620005385760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b62000245610fa0620006a2565b600054610100900460ff16620005a15760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b61012d805461ffff19166002179055620005cb60008051602062005e5a8339815191528062000657565b620005e660008051602062005e5a8339815191523362000727565b6200024560003362000727565b600054610100900460ff166200064f5760405162461bcd60e51b815260206004820152602b602482015260008051602062005e7a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000137565b600161015f55565b600082815260c96020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60655463ffffffff600160801b90910481169082168103620006c2575050565b6065805463ffffffff60801b1916600160801b63ffffffff8581169182029290921790925560408051918416825260208201929092527f66db0986e1156e2e747795714bf0301c7e1c695c149a738cb01bcf5cfead8465910160405180910390a15050565b62000733828262000737565b5050565b62000743828262000762565b600082815260fb602052604090206200075d908262000806565b505050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff166200073357600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620007c23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200081d836001600160a01b03841662000826565b90505b92915050565b60008181526001830160205260408120546200086f5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000820565b50600062000820565b6001600160a01b03811681146200009757600080fd5b60008060408385031215620008a257600080fd5b8251620008af8162000878565b6020840151909250620008c28162000878565b809150509250929050565b60805160a05161554462000916600039600081816108e901528181610e4201528181610eec015281816110f5015281816113d3015261142d0152600061152401526155446000f3fe6080604052600436106102295760003560e01c806391d1485411610123578063ca15c873116100ab578063f2bda26d1161006f578063f2bda26d146106e6578063f727473a14610706578063f74dad8114610719578063fcf6666414610746578063ffb0a4a01461076657600080fd5b8063ca15c87314610651578063d547741f14610671578063debcf1fe14610691578063f06f8acd146106b1578063f1c5e014146106d357600080fd5b8063a7efe348116100f2578063a7efe3481461059b578063b76040cd146105bb578063ba0a868b146105cf578063bc88d7e414610604578063c9c653961461063157600080fd5b806391d148541461052557806393867fb5146105455780639ba372c214610566578063a217fddf1461058657600080fd5b806336568abe116101b15780637a1d87f4116101755780637a1d87f41461046b5780638129fc1c1461048b5780638672d545146104a057806387302037146104cd5780639010d07c146104ed57600080fd5b806336568abe146103b257806353abc069146103d257806354fd4d501461040857806355817d1d1461042b57806369a4dea71461044b57600080fd5b80632ab2fad1116101f85780632ab2fad1146102e85780632c40de1b146103085780632f2ff15d1461033b5780633049cff91461035b578063322cf8441461039257600080fd5b806301ffc9a714610235578063102ee9ba1461026a57806321589fa114610295578063248a9ca3146102aa57600080fd5b3661023057005b600080fd5b34801561024157600080fd5b5061025561025036600461497c565b610788565b60405190151581526020015b60405180910390f35b61027d610278366004614a1b565b6107b3565b6040516001600160801b039091168152602001610261565b6102a86102a3366004614aad565b6108ac565b005b3480156102b657600080fd5b506102da6102c5366004614aed565b600090815260c9602052604090206001015490565b604051908152602001610261565b3480156102f457600080fd5b5061027d610303366004614b06565b610a18565b34801561031457600080fd5b507f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b166102da565b34801561034757600080fd5b506102a8610356366004614b6a565b610a72565b34801561036757600080fd5b506102a8610376366004614b9a565b6001600160a01b03909116600090815260686020526040902055565b34801561039e57600080fd5b506102da6103ad366004614bc6565b610a97565b3480156103be57600080fd5b506102a86103cd366004614b6a565b610aba565b3480156103de57600080fd5b506102da6103ed366004614bf4565b6001600160a01b031660009081526068602052604090205490565b34801561041457600080fd5b5060025b60405161ffff9091168152602001610261565b34801561043757600080fd5b506102a8610446366004614c25565b610b3d565b34801561045757600080fd5b506102a8610466366004614c63565b610b7e565b34801561047757600080fd5b506102a8610486366004614c7e565b610ba9565b34801561049757600080fd5b506102a8610cd6565b3480156104ac57600080fd5b506104c06104bb366004614bc6565b610de7565b6040516102619190614d1e565b3480156104d957600080fd5b506102a86104e8366004614aed565b610e0a565b3480156104f957600080fd5b5061050d610508366004614d42565b610f1d565b6040516001600160a01b039091168152602001610261565b34801561053157600080fd5b50610255610540366004614b6a565b610f35565b34801561055157600080fd5b506000805160206155188339815191526102da565b34801561057257600080fd5b506102da610581366004614d64565b610f60565b34801561059257600080fd5b506102da600081565b3480156105a757600080fd5b506102a86105b6366004614bf4565b610fd7565b3480156105c757600080fd5b506001610418565b3480156105db57600080fd5b506105ef6105ea366004614bc6565b6110ba565b60405163ffffffff9091168152602001610261565b34801561061057600080fd5b5061062461061f366004614aed565b6110d6565b6040516102619190614e4d565b34801561063d57600080fd5b506104c061064c366004614bc6565b61111a565b34801561065d57600080fd5b506102da61066c366004614aed565b611153565b34801561067d57600080fd5b506102a861068c366004614b6a565b61116a565b34801561069d57600080fd5b506102a86106ac366004614e6a565b61118f565b3480156106bd57600080fd5b50606554600160801b900463ffffffff166105ef565b61027d6106e1366004614a1b565b6111fb565b3480156106f257600080fd5b5061027d610701366004614b06565b6112a9565b6102da610714366004614eee565b6112ff565b34801561072557600080fd5b50610739610734366004614f2e565b61140b565b6040516102619190614f74565b34801561075257600080fd5b506102da610761366004614bf4565b611451565b34801561077257600080fd5b5061077b61147a565b6040516102619190614fc3565b60006001600160e01b03198216635a05180f60e01b14806107ad57506107ad82611489565b92915050565b60006107bd6114be565b6107c5611519565b6107d28787853486611564565b6107e4876001600160a01b03166115de565b1561081357816001600160801b031634101561081357604051637038b89960e01b815260040160405180910390fd5b600061081f8888611605565b6040805161010081018252338152815180830183526001600160a01b038c811682528b166020828101919091528201526001918101919091526001600160801b038516606082015234608082015260a08101829052600060c0820181905260e0820152909150610890878783611690565b60c001519150506108a2600161015f55565b9695505050505050565b6108b46114be565b6108bc611519565b60006108d06108cb8560801c90565b611c0a565b6040516331a9108f60e11b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190615010565b6001600160a01b0316336001600160a01b03161461098d57604051634ca8886760e01b815260040160405180910390fd5b6000341180156109b9575060208101516109b79060005b60200201516001600160a01b03166115de565b155b80156109d2575060208101516109d09060016109a4565b155b156109f057604051631334bf4f60e11b815260040160405180910390fd5b6109f982611cc9565b610a07848484843334611e06565b50610a13600161015f55565b505050565b6000610a248585612205565b6000610a308686611605565b604080518082019091526001600160a01b038089168252871660208201529091506000610a60828787868561224b565b6020015193505050505b949350505050565b600082815260c96020526040902060010154610a8d8161240f565b610a138383612419565b6000610aa38383612205565b6000610aaf8484611605565b9050610a6a8161243b565b6001600160a01b0381163314610b2f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610b39828261245d565b5050565b610b556000805160206155188339815191523361247f565b80610b5f816124a6565b6000610b6b8585611605565b9050610b7781846124d0565b5050505050565b610b966000805160206155188339815191523361247f565b80610ba0816124a6565b610b398261259e565b610bc16000805160206155188339815191523361247f565b60005b81811015610a135760006101676349146bde30868686818110610be957610be961502d565b9050602002016020810190610bfe9190614bf4565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f9190615043565b9050600781900b60161480610c885750600781900b60c2145b610cc55760405162461bcd60e51b815260206004820152600e60248201526d121514d7d054d4d3d0d7d190525360921b6044820152606401610b26565b50610ccf8161507c565b9050610bc4565b600054610100900460ff1615808015610cf65750600054600160ff909116105b80610d105750303b158015610d10575060005460ff166001145b610d735760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b26565b6000805460ff191660011790558015610d96576000805461ff0019166101001790555b610d9e612622565b8015610de4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610def61480f565b610df98383612205565b610e038383611605565b9392505050565b610e126114be565b610e1a611519565b6000610e296108cb8360801c90565b6040516331a9108f60e11b8152600481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb59190615010565b6001600160a01b0316336001600160a01b031614610ee657604051634ca8886760e01b815260040160405180910390fd5b610f11827f000000000000000000000000000000000000000000000000000000000000000083612671565b50610de4600161015f55565b600082815260fb60205260408120610e039083612817565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60007f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b16610f8d813361247f565b82610f9781612823565b85610fa181612823565b85610fab8161284a565b610fb36114be565b610fbf33888a8961286b565b9450610fcc600161015f55565b505050509392505050565b610fef6000805160206155188339815191523361247f565b60405163248a35ef60e11b81523060048201526001600160a01b0382166024820152600090610167906349146bde906044016020604051808303816000875af1158015611040573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110649190615043565b9050600781900b6016148061107d5750600781900b60c2145b610b395760405162461bcd60e51b815260206004820152600e60248201526d121514d7d054d4d3d0d7d190525360921b6044820152606401610b26565b6000806110c78484611605565b9050610a6a816000015161291f565b6110de614837565b60006110ed6108cb8460801c90565b9050610e03837f000000000000000000000000000000000000000000000000000000000000000083612961565b61112261480f565b61112a6114be565b611132611519565b61113c8383612205565b6111468383612a62565b90506107ad600161015f55565b600081815260fb602052604081206107ad90612b99565b600082815260c960205260409020600101546111858161240f565b610a13838361245d565b61012d546000906111a59061ffff166001615095565b905060028480156111be57508061ffff168261ffff1614155b156111db5760405162dc149f60e41b815260040160405180910390fd5b846111e4578091505b61012d805461ffff191661ffff8416179055610b77565b60006112056114be565b61120d611519565b61121a8787853486611564565b60006112268888611605565b6040805161010081018252338152815180830183526001600160a01b038c811682528b1660208281019190915282015260009181018290526001600160801b038616606082015234608082015260a0810183905260c0810182905260e0810191909152909150611297878783611690565b60e001519150506108a2600161015f55565b60006112b58585612205565b60006112c18686611605565b604080518082019091526001600160a01b0380891682528716602082015290915060006112f282878786600161224b565b5198975050505050505050565b60006113096114be565b611311611519565b61131b8484612205565b60003411801561133a5750611338846001600160a01b03166115de565b155b80156113555750611353836001600160a01b03166115de565b155b1561137357604051631334bf4f60e11b815260040160405180910390fd5b61137c82611cc9565b61138461480f565b61138e8585612ba3565b6113a35761139c8585612a62565b90506113b0565b6113ad8585611605565b90505b604080518082019091526001600160a01b038087168252851660208201526113fc7f00000000000000000000000000000000000000000000000000000000000000008286853334612c06565b92505050610e03600161015f55565b60606114178585612205565b60006114238686611605565b90506108a28185857f0000000000000000000000000000000000000000000000000000000000000000612e11565b60008161145d81612823565b50506001600160a01b031660009081526068602052604090205490565b6060611484612f3c565b905090565b60006001600160e01b03198216637965db0b60e01b14806107ad57506301ffc9a760e01b6001600160e01b03198316146107ad565b600261015f54036115115760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b26565b600261015f55565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115625760405163d0c8bfe560e01b815260040160405180910390fd5b565b4283101561158557604051631ab7da6b60e01b815260040160405180910390fd5b611597816001600160801b031661284a565b6115a18585612205565b6000821180156115c057506115be856001600160a01b03166115de565b155b15610b7757604051631334bf4f60e11b815260040160405180910390fd5b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146107ad565b61160d61480f565b6116178383612ba3565b6116345760405163317f12fd60e21b815260040160405180910390fd5b6000611640848461305a565b80516001600160a01b039081166000908152603460209081526040808320828601519094168352928152908290205482518084019093526001600160801b03168252810191909152949350505050565b60006116cf8260200151602001518360a00151602001516000600281106116b9576116b961502d565b60200201516001600160a01b0390811691161490565b905060005b838110156119b25760008585838181106116f0576116f061502d565b905060400201602001602081019061170891906150b0565b9050600086868481811061171e5761171e61502d565b60409081029290920135600081815260666020528381208451606081019586905292955093909250839060039082845b81548152602001906001019080831161174e5750505050509050600080611774836130c0565b9150915061178b8960a00151600001518688613195565b6000808215158a1515146117a557835160208501516117ad565b602084015184515b915091506000806117c3848b8f604001516131fa565b91509150806001600160801b031684600001516001600160801b031610156117fe5760405163bb55fd2760e01b815260040160405180910390fd5b83518190036001600160801b0316845282518290849061181f9083906150cb565b6001600160801b03908116909152845160208601519082169116101590506118525782516001600160801b031660208401525b600061185e87876132ce565b80518a55602080820151908a01519192501461187f57602081015160018a01555b604080820151908901511461189957604081015160028a01555b8d60a0015160200151866118ae5760016118b1565b60005b60ff16600281106118c4576118c461502d565b60200201516001600160a01b03168e60a0015160200151876118e75760006118ea565b60015b60ff16600281106118fd576118fd61502d565b60200201516001600160a01b03168b7f720da23a5c920b1d8827ec83c4d3c4d90d9419eadb0036b88cb4c2ffa91aef7d8a600060200201518b60016020020151600160405161194e939291906150eb565b60405180910390a4828e60c00181815161196891906150cb565b6001600160801b031690525060e08e0180518391906119889083906150cb565b6001600160801b03169052506119ab9a508b99506133b098505050505050505050565b90506116d4565b506000826040015115611a675760006119d78460c001518560a00151600001516133b6565b90508360c00151816119e99190615119565b6001600160801b0380831660c08701819052606087015192945091161015611a2457604051630699263d60e01b815260040160405180910390fd5b602080850151516001600160a01b0316600090815260689091526040812080546001600160801b0385169290611a5b908490615139565b90915550611b0c915050565b6000611a7f8460e001518560a00151600001516133ed565b9050808460e00151611a919190615119565b6001600160801b0380831660e08701819052606087015192945091161115611acc5760405163f602de8f60e01b815260040160405180910390fd5b6020808501518101516001600160a01b0316600090815260689091526040812080546001600160801b0385169290611b05908490615139565b9091555050505b611b3783602001516000015184600001518560c001516001600160801b031686608001516000613427565b611b5b83602001516020015184600001518560e001516001600160801b031661351d565b8260200151602001516001600160a01b03168360200151600001516001600160a01b031684600001516001600160a01b03167f95f3b01351225fea0e69a46f68b164c9dea10284f12cd4a907ce66510ab7af6a8660c001518760e00151868960400151604051611bf394939291906001600160801b039485168152928416602084015292166040820152901515606082015260800190565b60405180910390a45050505050565b600161015f55565b611c1261480f565b6001600160801b0382166000908152603560205260408082208151808301928390529160029082845b81546001600160a01b03168152600190910190602001808311611c3b575050505050905060006001600160a01b031681600060028110611c7d57611c7d61502d565b60200201516001600160a01b031603611ca95760405163317f12fd60e21b815260040160405180910390fd5b604080518082019091526001600160801b03909316835260208301525090565b60005b6002811015610b3957818160028110611ce757611ce761502d565b608002016000016020810190611cfd91906150b0565b6001600160801b0316828260028110611d1857611d1861502d565b608002016020016020810190611d2e91906150b0565b6001600160801b03161015611d5657604051632e77ac1d60e11b815260040160405180910390fd5b611d99828260028110611d6b57611d6b61502d565b608002016040016020810190611d819190615163565b6001600160401b0316600160301b908190041c151590565b611db657604051636a43f8d160e01b815260040160405180910390fd5b611de1828260028110611dcb57611dcb61502d565b608002016060016020810190611d819190615163565b611dfe57604051636a43f8d160e01b815260040160405180910390fd5b600101611ccc565b60008681526066602052604080822081516060810192839052909291839060039082845b815481526020019060010190808311611e2a5750505050509050600080611e50836130c0565b604080518082019091529193509150611ea0908a60026000835b82821015611e9657611e8760808302850136819003810190615194565b81526020019060010190611e6a565b5050505083613568565b611ebd5760405163408e5ba560e11b815260040160405180910390fd5b60408051808201909152600090611f0a908a600284835b82821015611f0057611ef160808302850136819003810190615194565b81526020019060010190611ed4565b50505050836132ce565b8051855191925014611f1b57805185555b6020808201519085015114611f3557602081015160018601555b6040808201519085015114611f4f57604081015160028601555b6000611f5b89846136c3565b905060005b600281101561219d576000828260028110611f7d57611f7d61502d565b60200201519050858260028110611f9657611f9661502d565b6020020151516001600160801b03168c8360028110611fb757611fb761502d565b608002016000016020810190611fcd91906150b0565b6001600160801b031610156120445760008c8360028110611ff057611ff061502d565b60800201600001602081019061200691906150b0565b8784600281106120185761201861502d565b6020020151516120289190615119565b905061203e828c836001600160801b031661351d565b50612103565b8582600281106120565761205661502d565b6020020151516001600160801b03168c83600281106120775761207761502d565b60800201600001602081019061208d91906150b0565b6001600160801b031611156121035760008683600281106120b0576120b061502d565b6020020151518d84600281106120c8576120c861502d565b6080020160000160208101906120de91906150b0565b6120e89190615119565b9050612101828c836001600160801b03168d6001613427565b505b6000891180156121205750612120816001600160a01b03166115de565b801561217c57508582600281106121395761213961502d565b6020020151516001600160801b03168c836002811061215a5761215a61502d565b60800201600001602081019061217091906150b0565b6001600160801b031611155b15612194576121946001600160a01b038b168a613746565b50600101611f60565b50602081015181516040516001600160a01b0392831692909116908e907f720da23a5c920b1d8827ec83c4d3c4d90d9419eadb0036b88cb4c2ffa91aef7d906121ef908f90608082019060009061527c565b60405180910390a4505050505050505050505050565b8161220f81612823565b8161221981612823565b6001600160a01b038085169084160361224557604051630bd969eb60e41b815260040160405180910390fd5b50505050565b60408051808201909152600080825260208201526000612280876020015185602001516000600281106116b9576116b961502d565b905060005b858110156123bf5760008787838181106122a1576122a161502d565b90506040020160200160208101906122b991906150b0565b905060008888848181106122cf576122cf61502d565b60409081029290920135600081815260666020528381208451606081019586905292955090939192509060039082845b8154815260200190600101908083116122ff5750505050509050600080612325836130c0565b915091506123388a600001518587613195565b60008115158815151461234c578251612352565b60208301515b905060008061236283898e6131fa565b91509150818b60000181815161237891906150cb565b6001600160801b031690525060208b0180518291906123989083906150cb565b6001600160801b03169052506123b897508896506133b095505050505050565b9050612285565b5082156123e457815184516123d491906133b6565b6001600160801b03168252612405565b6123f6826020015185600001516133ed565b6001600160801b031660208301525b5095945050505050565b610de4813361385f565b61242382826138b8565b600082815260fb60205260409020610a13908261393e565b80516001600160801b03166000908152606760205260408120610e0381612b99565b6124678282613953565b600082815260fb60205260409020610a1390826139ba565b6124898282610f35565b610b3957604051634ca8886760e01b815260040160405180910390fd5b620f424063ffffffff82161115610de4576040516358d620b360e01b815260040160405180910390fd5b81516001600160801b031660009081526069602052604090205463ffffffff908116908216810361250057505050565b82516001600160801b031660009081526069602090815260408220805463ffffffff191663ffffffff861617905580850151908101516001600160a01b03169160200201516001600160a01b03167f831434d05f3ad5f63be733ea463b2933c70d2162697fd200a22b5d56f5c454b6838560405161259192919063ffffffff92831681529116602082015260400190565b60405180910390a3505050565b60655463ffffffff600160801b909104811690821681036125bd575050565b6065805463ffffffff60801b1916600160801b63ffffffff8581169182029290921790925560408051918416825260208201929092527f66db0986e1156e2e747795714bf0301c7e1c695c149a738cb01bcf5cfead8465910160405180910390a15050565b600054610100900460ff166126495760405162461bcd60e51b8152600401610b2690615298565b6126516139cf565b6126596139fe565b612661613a2d565b612669613a64565b611562613a93565b600061267e848484612961565b8051604051630852cd8d60e31b81529192506001600160a01b038516916342966c68916126b19160040190815260200190565b600060405180830381600087803b1580156126cb57600080fd5b505af11580156126df573d6000803e3d6000fd5b5050825160009081526066602052604081208181556001810182905560020155506127079050565b805182516001600160801b0316600090815260676020526040902061272b91613af2565b506040810151516020820151606083015161275992919060005b6020020151516001600160801b031661351d565b604081015160209081015190820151606083015161277a9291906001612745565b604081015160208101516001600160a01b031690600060200201516001600160a01b031682602001516001600160a01b03167f4d5b6e0627ea711d8e9312b6ba56f50e0b51d41816fd6fd38643495ac81d38b6846000015185606001516000600281106127e9576127e961502d565b6020020151606087015160016020020151604051612809939291906152e3565b60405180910390a450505050565b6000610e038383613afe565b6001600160a01b038116610de45760405163e6c4247b60e01b815260040160405180910390fd5b80600003610de457604051637c946ed760e01b815260040160405180910390fd5b6001600160a01b038216600090815260686020526040812054808203612895576000915050610a6a565b808511156128a1578094505b6128ab8582615305565b6001600160a01b0385166000908152606860205260409020556128cf84848761351d565b6040516001600160a01b0387811682528691818616918716907f2f4e8fcae66f01952d258445c03f43cf56d3ce389e017ecd2afa8a79e77175889060200160405180910390a45092949350505050565b6001600160801b03811660009081526069602052604081205463ffffffff16801561294a5780610e03565b5050606554600160801b900463ffffffff16919050565b612969614837565b6040516331a9108f60e11b8152600481018590526000906001600160a01b03851690636352211e90602401602060405180830381865afa1580156129b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129d59190615010565b600086815260666020526040808220815160608101928390529394509192919060039082845b8154815260200190600101908083116129fb5750505050509050600080612a21836130c0565b915091506000612a3187836136c3565b604080516080810182528b81526001600160a01b039097166020880152860152505060608301525090509392505050565b612a6a61480f565b612a748383612ba3565b15612a925760405163c9bb25eb60e01b815260040160405180910390fd5b6000612a9e848461305a565b603354909150600090612abb906001600160801b031660016150cb565b603380546001600160801b0319166001600160801b0383169081179091556000908152603560205260409020909150612af690836002614863565b5081516001600160a01b039081166000908152603460209081526040808320828701805186168552925280832080546001600160801b0319166001600160801b0387169081179091559151865191519085169491909116927f6365c594f5448f79c1cc1e6f661bdbf1d16f2e8f85747e13f8e80f1fd168b7c391a46040518060400160405280826001600160801b03168152602001838152509250505092915050565b60006107ad825490565b600080612bb0848461305a565b80516001600160a01b039081166000908152603460209081526040808320828601519094168352929052908120549192506001600160801b039091169003612bfc5760009150506107ad565b5060019392505050565b8451600090612c3a908487845b608002016000016020810190612c2991906150b0565b6001600160801b0316856001613427565b6020860151612c4c9084876001612c13565b606554600090612c66906001600160801b031660016150cb565b606580546001600160801b0383166001600160801b03199182168117909255875192935060009260801b161786516001600160801b03166000908152606760205260409020909150612cb89082613b28565b5087516020870151600091612cce9160016116b9565b60408051808201909152909150612d1c908960026000835b82821015612d1257612d0360808302850136819003810190615194565b81526020019060010190612ce6565b50505050826132ce565b6000838152606660205260409020612d359160036148b7565b506040516340c10f1960e01b81526001600160a01b038781166004830152602482018490528b16906340c10f1990604401600060405180830381600087803b158015612d8057600080fd5b505af1158015612d94573d6000803e3d6000fd5b5050505088600160028110612dab57612dab61502d565b602002015189516040516001600160a01b0392831692918216918916907fff24554f8ccfe540435cfc8854831f8dcf1cf2068708cfaf46e8b52a4ccc4c8d90612dfc9087908e906080820190615318565b60405180910390a45098975050505050505050565b83516001600160801b03166000908152606760205260408120606091612e3682612b99565b9050841580612e4457508085115b15612e4d578094505b84861115612e6e57604051632cd4dad360e01b815260040160405180910390fd5b6000612e7a8787615305565b90506000816001600160401b03811115612e9657612e9661517e565b604051908082528060200260200182016040528015612ecf57816020015b612ebc614837565b815260200190600190039081612eb45790505b50905060005b82811015612f2f576000612ef3612eec838c615139565b8790612817565b9050612f0081898d612961565b838381518110612f1257612f1261502d565b602002602001018190525050612f288160010190565b9050612ed5565b5098975050505050505050565b6033546060906001600160801b03166000816001600160401b03811115612f6557612f6561517e565b604051908082528060200260200182016040528015612f9e57816020015b612f8b6148e5565b815260200190600190039081612f835790505b50905060005b826001600160801b0316816001600160801b031610156130535760356000612fcd8360016150cb565b6001600160801b03168152602081019190915260409081016000208151808301928390529160029082845b81546001600160a01b03168152600190910190602001808311612ff857505050505082826001600160801b0316815181106130355761303561502d565b6020026020010181905250808061304b9061533a565b915050612fa4565b5092915050565b6130626148e5565b816001600160a01b0316836001600160a01b03161061309e57604080518082019091526001600160a01b03808416825284166020820152610e03565b50604080518082019091526001600160a01b0392831681529116602082015290565b6130c8614903565b6040805160c0808201835284516001600160801b0390811683850190815260208088018051841660608701528051608090811c6001600160401b031681880152905190941c60a0860152908452845180840186528751841c8152878601519092168282015260009490840192908201908760026020020151901c6001600160401b0316815260200160c16001886002600381106131675761316761502d565b6020020151901b901c6001600160401b0316905290529150600160ff1b836002602002015110159050915091565b826001600160801b03166131a98360801c90565b6001600160801b0316146131d05760405163b7b067f960e01b815260040160405180910390fd5b806001600160801b0316600003610a135760405163758d09cb60e11b815260040160405180910390fd5b600080600085600001516001600160801b03169050600086602001516001600160801b03169050600061324988604001516001600160401b031665ffffffffffff8116600160301b9091041b90565b9050600061327389606001516001600160401b031665ffffffffffff8116600160301b9091041b90565b905086156132a357613299613294896001600160801b031686868686613b34565b613c14565b95508794506132c2565b8795506132bf613294896001600160801b031686868686613c81565b94505b50505050935093915050565b6132d6614949565b604080516060808201835260208681015151875151608091821b6001600160801b0319166001600160801b03918216178552885193840151848701519484015160c09190911b6001600160c01b0319169490921b67ffffffffffffffff60801b16911617919091179082015290810183613351576000613357565b600160ff1b5b60c08660016020020151606001516001600160401b0316901b60808760016020020151604001516001600160401b0316901b60008860016020020151602001516001600160801b0316901b171717815250905092915050565b60010190565b6000806133c28361291f565b9050610a6a6132946001600160801b038616620f42406133e28582615360565b63ffffffff16613da1565b6000806133f98361291f565b9050610a6a6132946001600160801b03861661341884620f4240615360565b63ffffffff16620f4240613df0565b613439856001600160a01b03166115de565b15613489578282101561345f5760405163677606af60e01b815260040160405180910390fd5b82821115613484576134846134748484615305565b6001600160a01b03861690613746565b610b77565b8215610b775780156135085760006134aa6001600160a01b03871630613ecb565b90506134c16001600160a01b038716863087613f59565b60006134d66001600160a01b03881630613ecb565b9050846134e38383615305565b1461350157604051631947c14d60e31b815260040160405180910390fd5b5050610b77565b610b776001600160a01b038616853086613f59565b8060000361352a57505050565b61353c836001600160a01b03166115de565b1561355457610a136001600160a01b03831682613746565b610a136001600160a01b0384168383613f83565b6000805b6002811015612bfc578281600281106135875761358761502d565b6020020151516001600160801b03168482600281106135a8576135a861502d565b6020020151516001600160801b031614158061360a57508281600281106135d1576135d161502d565b6020020151602001516001600160801b03168482600281106135f5576135f561502d565b6020020151602001516001600160801b031614155b8061365b57508281600281106136225761362261502d565b6020020151604001516001600160401b03168482600281106136465761364661502d565b6020020151604001516001600160401b031614155b806136ac57508281600281106136735761367361502d565b6020020151606001516001600160401b03168482600281106136975761369761502d565b6020020151606001516001600160401b031614155b156136bb5760009150506107ad565b60010161356c565b6136cb6148e5565b816136da578260200151610e03565b604051806040016040528084602001516001600281106136fc576136fc61502d565b60200201516001600160a01b03166001600160a01b03168152602001846020015160006002811061372f5761372f61502d565b60200201516001600160a01b031690529392505050565b804710156137965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610b26565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146137e3576040519150601f19603f3d011682016040523d82523d6000602084013e6137e8565b606091505b5050905080610a135760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610b26565b6138698282610f35565b610b395761387681613fe8565b613881836020613ffa565b6040516020016138929291906153b7565b60408051601f198184030181529082905262461bcd60e51b8252610b269160040161542c565b6138c28282610f35565b610b3957600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556138fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610e03836001600160a01b038416614195565b61395d8282610f35565b15610b3957600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e03836001600160a01b0384166141e4565b600054610100900460ff166139f65760405162461bcd60e51b8152600401610b2690615298565b6115626142d7565b600054610100900460ff16613a255760405162461bcd60e51b8152600401610b2690615298565b6115626142fe565b600054610100900460ff16613a545760405162461bcd60e51b8152600401610b2690615298565b613a5c6142d7565b611562614330565b600054610100900460ff16613a8b5760405162461bcd60e51b8152600401610b2690615298565b6115626143a1565b600054610100900460ff16613aba5760405162461bcd60e51b8152600401610b2690615298565b6115627f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b166000805160206155188339815191526143c8565b6000610e0383836141e4565b6000826000018281548110613b1557613b1561502d565b9060005260206000200154905092915050565b6000610e038383614195565b600082600003613b875781600003613b5f57604051634e305c4b60e01b815260040160405180910390fd5b613b8086613b71600160301b8061545f565b613b7b858061545f565b613da1565b9050613c0b565b600160301b8402858402838602016000613ba1868a61545f565b613bab9083615305565b90506000613bb98485614413565b90506000613bc78484614413565b90506000613bd58383614442565b90506000613be4878884613da1565b90506000613bf3878785613df0565b9050613c008e8383613da1565b985050505050505050505b95945050505050565b60006001600160801b03821115613c7d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610b26565b5090565b600082600003613ccd5781600003613cac57604051634e305c4b60e01b815260040160405180910390fd5b613b8086613cba848061545f565b613cc8600160301b8061545f565b613df0565b600160301b8402858402838602016000613ce7898361545f565b90506000613cf58485614413565b90506000613d038389614413565b90506000613d118383614442565b90506000613d20878884613da1565b90506000613d2f868c85613da1565b9050600080613d3e8484614458565b915091508115613d6d57613d5c89613d56878b615476565b83613df0565b9a5050505050505050505050613c0b565b613d788a8b8a613da1565b613d82908e615139565b613d8c908a615476565b9a505050505050505050505095945050505050565b600080613daf858585613df0565b90506000613dbe868686614481565b1115610a6a576000198110613de657604051631a93c68960e11b815260040160405180910390fd5b6001019050610e03565b6000806000613dff868661449c565b9150915081600003613e2457838181613e1a57613e1a61537d565b0492505050610e03565b838210613e4457604051631a93c68960e11b815260040160405180910390fd5b6000613e51878787614481565b9050600080613e618585856144d5565b9150915081600003613e8957868181613e7c57613e7c61537d565b0495505050505050610e03565b6000878103881690613e9c848484614505565b90506000613eb8838b81613eb257613eb261537d565b04614542565b919091029b9a5050505050505050505050565b6000613ed6836115de565b15613eec57506001600160a01b038116316107ad565b826040516370a0823160e01b81526001600160a01b03848116600483015291909116906370a0823190602401602060405180830381865afa158015613f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190615498565b801580613f6a5750613f6a846115de565b612245576122456001600160a01b038516848484614563565b80600003613f9057505050565b613f99836115de565b15613fd4576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015612245573d6000803e3d6000fd5b610a136001600160a01b03841683836145ce565b60606107ad6001600160a01b03831660145b6060600061400983600261545f565b614014906002615139565b6001600160401b0381111561402b5761402b61517e565b6040519080825280601f01601f191660200182016040528015614055576020820181803683370190505b509050600360fc1b816000815181106140705761407061502d565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061409f5761409f61502d565b60200101906001600160f81b031916908160001a90535060006140c384600261545f565b6140ce906001615139565b90505b6001811115614146576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106141025761410261502d565b1a60f81b8282815181106141185761411861502d565b60200101906001600160f81b031916908160001a90535060049490941c9361413f816154b1565b90506140d1565b508315610e035760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b26565b60008181526001830160205260408120546141dc575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107ad565b5060006107ad565b600081815260018301602052604081205480156142cd576000614208600183615305565b855490915060009061421c90600190615305565b905081811461428157600086600001828154811061423c5761423c61502d565b906000526020600020015490508087600001848154811061425f5761425f61502d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080614292576142926154c8565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107ad565b60009150506107ad565b600054610100900460ff166115625760405162461bcd60e51b8152600401610b2690615298565b600054610100900460ff166143255760405162461bcd60e51b8152600401610b2690615298565b611562610fa061259e565b600054610100900460ff166143575760405162461bcd60e51b8152600401610b2690615298565b61012d805461ffff1916600217905561437e600080516020615518833981519152806143c8565b614396600080516020615518833981519152336145fe565b6115626000336145fe565b600054610100900460ff16611c025760405162461bcd60e51b8152600401610b2690615298565b600082815260c96020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000806000614422858561449c565b91509150801982116144375781600101613c0b565b506002019392505050565b60008183116144515781610e03565b5090919050565b6000808383018481101561447357600080925092505061447a565b6001925090505b9250929050565b600081806144915761449161537d565b838509949350505050565b60008060006144ab8585614608565b90508484028082106144c457908190039250905061447a565b600181830303969095509350505050565b6000808284106144eb57508390508183036144fd565b6144f6600186615305565b9150508183035b935093915050565b600080614523838083038161451c5761451c61537d565b0460010190565b90508284816145345761453461537d565b048186021795945050505050565b60006001815b60088110156130535783820260020382029150600101614548565b6040516001600160a01b03808516602483015283166044820152606481018290526122459085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614617565b6040516001600160a01b038316602482015260448101829052610a1390849063a9059cbb60e01b90606401614597565b610b398282612419565b60006000198284099392505050565b600061466c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166146ec9092919063ffffffff16565b905080516000148061468d57508080602001905181019061468d91906154de565b610a135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b26565b6060610a6a848460008585600080866001600160a01b0316858760405161471391906154fb565b60006040518083038185875af1925050503d8060008114614750576040519150601f19603f3d011682016040523d82523d6000602084013e614755565b606091505b509150915061476687838387614771565b979650505050505050565b606083156147e05782516000036147d9576001600160a01b0385163b6147d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b26565b5081610a6a565b610a6a83838151156147f55781518083602001fd5b8060405162461bcd60e51b8152600401610b26919061542c565b604051806040016040528060006001600160801b031681526020016148326148e5565b905290565b60408051608081018252600080825260208201529081016148566148e5565b8152602001614832614903565b82600281019282156148ab579160200282015b828111156148ab57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614876565b50613c7d929150614967565b82600381019282156148ab579160200282015b828111156148ab5782518255916020019190600101906148ca565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816149125790505090565b60405180606001604052806003906020820280368337509192915050565b5b80821115613c7d5760008155600101614968565b60006020828403121561498e57600080fd5b81356001600160e01b031981168114610e0357600080fd5b6001600160a01b0381168114610de457600080fd5b60008083601f8401126149cd57600080fd5b5081356001600160401b038111156149e457600080fd5b6020830191508360208260061b850101111561447a57600080fd5b80356001600160801b0381168114614a1657600080fd5b919050565b60008060008060008060a08789031215614a3457600080fd5b8635614a3f816149a6565b95506020870135614a4f816149a6565b945060408701356001600160401b03811115614a6a57600080fd5b614a7689828a016149bb565b90955093505060608701359150614a8f608088016149ff565b90509295509295509295565b8061010081018310156107ad57600080fd5b60008060006102208486031215614ac357600080fd5b83359250614ad48560208601614a9b565b9150614ae4856101208601614a9b565b90509250925092565b600060208284031215614aff57600080fd5b5035919050565b60008060008060608587031215614b1c57600080fd5b8435614b27816149a6565b93506020850135614b37816149a6565b925060408501356001600160401b03811115614b5257600080fd5b614b5e878288016149bb565b95989497509550505050565b60008060408385031215614b7d57600080fd5b823591506020830135614b8f816149a6565b809150509250929050565b60008060408385031215614bad57600080fd5b8235614bb8816149a6565b946020939093013593505050565b60008060408385031215614bd957600080fd5b8235614be4816149a6565b91506020830135614b8f816149a6565b600060208284031215614c0657600080fd5b8135610e03816149a6565b803563ffffffff81168114614a1657600080fd5b600080600060608486031215614c3a57600080fd5b8335614c45816149a6565b92506020840135614c55816149a6565b9150614ae460408501614c11565b600060208284031215614c7557600080fd5b610e0382614c11565b60008060208385031215614c9157600080fd5b82356001600160401b0380821115614ca857600080fd5b818501915085601f830112614cbc57600080fd5b813581811115614ccb57600080fd5b8660208260051b8501011115614ce057600080fd5b60209290920196919550909350505050565b8060005b60028110156122455781516001600160a01b0316845260209384019390910190600101614cf6565b81516001600160801b03168152602080830151606083019161305390840182614cf2565b60008060408385031215614d5557600080fd5b50508035926020909101359150565b600080600060608486031215614d7957600080fd5b8335614d84816149a6565b9250602084013591506040840135614d9b816149a6565b809150509250925092565b6001600160801b038082511683528060208301511660208401525060408101516001600160401b03808216604085015280606084015116606085015250505050565b805182526020808201516001600160a01b03168184015260408083015190614e1290850182614cf2565b506060820151608080850160005b6002811015614e4457614e34828551614da6565b9284019290820190600101614e20565b50505050505050565b61018081016107ad8284614de8565b8015158114610de457600080fd5b600080600060408486031215614e7f57600080fd5b8335614e8a81614e5c565b925060208401356001600160401b0380821115614ea657600080fd5b818601915086601f830112614eba57600080fd5b813581811115614ec957600080fd5b876020828501011115614edb57600080fd5b6020830194508093505050509250925092565b60008060006101408486031215614f0457600080fd5b8335614f0f816149a6565b92506020840135614f1f816149a6565b9150614ae48560408601614a9b565b60008060008060808587031215614f4457600080fd5b8435614f4f816149a6565b93506020850135614f5f816149a6565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015614fb757614fa3838551614de8565b928401926101809290920191600101614f90565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561500357614ff3848351614cf2565b9284019290850190600101614fe0565b5091979650505050505050565b60006020828403121561502257600080fd5b8151610e03816149a6565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561505557600080fd5b81518060070b8114610e0357600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161508e5761508e615066565b5060010190565b61ffff81811683821601908082111561305357613053615066565b6000602082840312156150c257600080fd5b610e03826149ff565b6001600160801b0381811683821601908082111561305357613053615066565b61012081016150fa8286614da6565b6151076080830185614da6565b60ff8316610100830152949350505050565b6001600160801b0382811682821603908082111561305357613053615066565b808201808211156107ad576107ad615066565b80356001600160401b0381168114614a1657600080fd5b60006020828403121561517557600080fd5b610e038261514c565b634e487b7160e01b600052604160045260246000fd5b6000608082840312156151a657600080fd5b604051608081018181106001600160401b03821117156151d657634e487b7160e01b600052604160045260246000fd5b6040526151e2836149ff565b81526151f0602084016149ff565b60208201526152016040840161514c565b60408201526152126060840161514c565b60608201529392505050565b6001600160801b0380615230836149ff565b16835280615240602084016149ff565b166020840152506152536040820161514c565b6001600160401b038082166040850152806152706060850161514c565b16606085015250505050565b610120810161528b828661521e565b615107608083018561521e565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b83815261012081016152f86020830185614da6565b610a6a60a0830184614da6565b818103818111156107ad576107ad615066565b838152610120810161532d602083018561521e565b610a6a60a083018461521e565b60006001600160801b0380831681810361535657615356615066565b6001019392505050565b63ffffffff82811682821603908082111561305357613053615066565b634e487b7160e01b600052601260045260246000fd5b60005b838110156153ae578181015183820152602001615396565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516153ef816017850160208801615393565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615420816028840160208801615393565b01602801949350505050565b602081526000825180602084015261544b816040850160208701615393565b601f01601f19169190910160400192915050565b80820281158282048414176107ad576107ad615066565b60008261549357634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156154aa57600080fd5b5051919050565b6000816154c0576154c0615066565b506000190190565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156154f057600080fd5b8151610e0381614e5c565b6000825161550d818460208701615393565b919091019291505056fe2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096a164736f6c6343000813000a2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type TestCarbonControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCarbonControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCarbonController__factory extends ContractFactory {
  constructor(...args: TestCarbonControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initVoucher: string,
    proxy: string,
    overrides?: Overrides & { from?: string }
  ): Promise<TestCarbonController> {
    return super.deploy(
      initVoucher,
      proxy,
      overrides || {}
    ) as Promise<TestCarbonController>;
  }
  override getDeployTransaction(
    initVoucher: string,
    proxy: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(initVoucher, proxy, overrides || {});
  }
  override attach(address: string): TestCarbonController {
    return super.attach(address) as TestCarbonController;
  }
  override connect(signer: Signer): TestCarbonController__factory {
    return super.connect(signer) as TestCarbonController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCarbonControllerInterface {
    return new utils.Interface(_abi) as TestCarbonControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCarbonController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestCarbonController;
  }
}
