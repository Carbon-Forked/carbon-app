/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestUpgradeable,
  TestUpgradeableInterface,
} from "../../../contracts/helpers/TestUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initializations",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "checkVersion",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "postUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "restricted",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newInitializations",
        type: "uint16",
      },
    ],
    name: "setInitializations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "newVersion",
        type: "uint16",
      },
    ],
    name: "setVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ff1806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637072c6b1116100a257806393867fb51161007157806393867fb514610252578063a217fddf14610266578063ca15c8731461026e578063d547741f14610281578063debcf1fe1461029457600080fd5b80637072c6b1146102045780638129fc1c1461020c5780639010d07c1461021457806391d148541461023f57600080fd5b80632f2ff15d116100de5780632f2ff15d146101b757806336568abe146101ca57806351a8a3e6146101dd57806354fd4d50146101f857600080fd5b806301ffc9a7146101105780630b5779e61461013857806311e96cd514610160578063248a9ca314610186575b600080fd5b61012361011e366004610c97565b6102a7565b60405190151581526020015b60405180910390f35b61015e610146366004610cc1565b60c9805461ffff191661ffff92909216919091179055565b005b61015e61016e366004610cc1565b60fb805461ffff191661ffff92909216919091179055565b6101a9610194366004610ce5565b60009081526065602052604090206001015490565b60405190815260200161012f565b61015e6101c5366004610cfe565b6102d2565b61015e6101d8366004610cfe565b6102fc565b60c95461ffff165b60405161ffff909116815260200161012f565b60fb5461ffff166101e5565b61015e61037f565b61015e610399565b610227610222366004610d3a565b6104aa565b6040516001600160a01b03909116815260200161012f565b61012361024d366004610cfe565b6104c9565b600080516020610fc58339815191526101a9565b6101a9600081565b6101a961027c366004610ce5565b6104f4565b61015e61028f366004610cfe565b61050b565b61015e6102a2366004610d5c565b610530565b60006001600160e01b03198216635a05180f60e01b14806102cc57506102cc826105ab565b92915050565b6000828152606560205260409020600101546102ed816105e0565b6102f783836105ea565b505050565b6001600160a01b03811633146103715760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61037b828261060c565b5050565b610397600080516020610fc58339815191523361062e565b565b600054610100900460ff16158080156103b95750600054600160ff909116105b806103d35750303b1580156103d3575060005460ff166001145b6104365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610368565b6000805460ff191660011790558015610459576000805461ff0019166101001790555b610461610655565b80156104a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b60008281526097602052604081206104c2908361068c565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526097602052604081206102cc90610698565b600082815260656020526040902060010154610526816105e0565b6102f7838361060c565b60c9546000906105459061ffff166001610dfc565b9050600061055660fb5461ffff1690565b905084801561056d57508061ffff168261ffff1614155b1561058a5760405162dc149f60e41b815260040160405180910390fd5b84610593578091505b60c9805461ffff191661ffff84161790555050505050565b60006001600160e01b03198216637965db0b60e01b14806102cc57506301ffc9a760e01b6001600160e01b03198316146102cc565b6104a781336106a2565b6105f482826106fb565b60008281526097602052604090206102f79082610781565b6106168282610796565b60008281526097602052604090206102f790826107fd565b61063882826104c9565b61037b57604051634ca8886760e01b815260040160405180910390fd5b600054610100900460ff1661067c5760405162461bcd60e51b815260040161036890610e17565b610684610812565b610397610849565b60006104c28383610880565b60006102cc825490565b6106ac82826104c9565b61037b576106b9816108aa565b6106c48360206108bc565b6040516020016106d5929190610e86565b60408051601f198184030181529082905262461bcd60e51b825261036891600401610efb565b61070582826104c9565b61037b5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561073d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006104c2836001600160a01b038416610a58565b6107a082826104c9565b1561037b5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006104c2836001600160a01b038416610aa7565b600054610100900460ff166108395760405162461bcd60e51b815260040161036890610e17565b60fb805461ffff19166001179055565b600054610100900460ff166108705760405162461bcd60e51b815260040161036890610e17565b610878610ba1565b610397610bc8565b600082600001828154811061089757610897610f2e565b9060005260206000200154905092915050565b60606102cc6001600160a01b03831660145b606060006108cb836002610f44565b6108d6906002610f5b565b67ffffffffffffffff8111156108ee576108ee610f6e565b6040519080825280601f01601f191660200182016040528015610918576020820181803683370190505b509050600360fc1b8160008151811061093357610933610f2e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061096257610962610f2e565b60200101906001600160f81b031916908160001a9053506000610986846002610f44565b610991906001610f5b565b90505b6001811115610a09576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106109c5576109c5610f2e565b1a60f81b8282815181106109db576109db610f2e565b60200101906001600160f81b031916908160001a90535060049490941c93610a0281610f84565b9050610994565b5083156104c25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610368565b6000818152600183016020526040812054610a9f575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102cc565b5060006102cc565b60008181526001830160205260408120548015610b90576000610acb600183610f9b565b8554909150600090610adf90600190610f9b565b9050818114610b44576000866000018281548110610aff57610aff610f2e565b9060005260206000200154905080876000018481548110610b2257610b22610f2e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b5557610b55610fae565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102cc565b60009150506102cc565b5092915050565b600054610100900460ff166103975760405162461bcd60e51b815260040161036890610e17565b600054610100900460ff16610bef5760405162461bcd60e51b815260040161036890610e17565b60fb5460c9805461ffff191661ffff909216919091179055610c1f600080516020610fc583398151915280610c42565b610c37600080516020610fc583398151915233610c8d565b610397600033610c8d565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61037b82826105ea565b600060208284031215610ca957600080fd5b81356001600160e01b0319811681146104c257600080fd5b600060208284031215610cd357600080fd5b813561ffff811681146104c257600080fd5b600060208284031215610cf757600080fd5b5035919050565b60008060408385031215610d1157600080fd5b8235915060208301356001600160a01b0381168114610d2f57600080fd5b809150509250929050565b60008060408385031215610d4d57600080fd5b50508035926020909101359150565b600080600060408486031215610d7157600080fd5b83358015158114610d8157600080fd5b9250602084013567ffffffffffffffff80821115610d9e57600080fd5b818601915086601f830112610db257600080fd5b813581811115610dc157600080fd5b876020828501011115610dd357600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052601160045260246000fd5b61ffff818116838216019080821115610b9a57610b9a610de6565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610e7d578181015183820152602001610e65565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610ebe816017850160208801610e62565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610eef816028840160208801610e62565b01602801949350505050565b6020815260008251806020840152610f1a816040850160208701610e62565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176102cc576102cc610de6565b808201808211156102cc576102cc610de6565b634e487b7160e01b600052604160045260246000fd5b600081610f9357610f93610de6565b506000190190565b818103818111156102cc576102cc610de6565b634e487b7160e01b600052603160045260246000fdfe2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096a164736f6c6343000813000a";

type TestUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUpgradeable__factory extends ContractFactory {
  constructor(...args: TestUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TestUpgradeable> {
    return super.deploy(overrides || {}) as Promise<TestUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestUpgradeable {
    return super.attach(address) as TestUpgradeable;
  }
  override connect(signer: Signer): TestUpgradeable__factory {
    return super.connect(signer) as TestUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUpgradeableInterface {
    return new utils.Interface(_abi) as TestUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as TestUpgradeable;
  }
}
