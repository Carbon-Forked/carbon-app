/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC20FeeOnTransfer,
  TestERC20FeeOnTransferInterface,
} from "../../../contracts/helpers/TestERC20FeeOnTransfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeDivisor",
        type: "uint256",
      },
    ],
    name: "setFeeDivisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setFeeEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "positiveFee",
        type: "bool",
      },
    ],
    name: "setFeeSide",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "newDecimals",
        type: "uint8",
      },
    ],
    name: "updateDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526009805461ffff19166101121790556103e8600a55600b805460ff191660011790553480156200003457600080fd5b506040516200189c3803806200189c833981016040819052620000579162000377565b6040805180820190915260018152603160f81b6020820152839081908185600362000083838262000478565b50600462000092828262000478565b50620000a49150839050600562000162565b61012052620000b581600662000162565b61014052815160208084019190912060e052815190820120610100524660a0526200014360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200015933826200019b565b505050620005c0565b600060208351101562000182576200017a8362000262565b905062000195565b816200018f848262000478565b5060ff90505b92915050565b6001600160a01b038216620001f75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b80600260008282546200020b919062000544565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f8151111562000290578260405163305a27a960e01b8152600401620001ee919062000566565b80516200029d826200059b565b179392505050565b505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002dd578181015183820152602001620002c3565b50506000910152565b600082601f830112620002f857600080fd5b81516001600160401b0380821115620003155762000315620002aa565b604051601f8301601f19908116603f01168101908282118183101715620003405762000340620002aa565b816040528381528660208588010111156200035a57600080fd5b6200036d846020830160208901620002c0565b9695505050505050565b6000806000606084860312156200038d57600080fd5b83516001600160401b0380821115620003a557600080fd5b620003b387838801620002e6565b94506020860151915080821115620003ca57600080fd5b50620003d986828701620002e6565b925050604084015190509250925092565b600181811c90821680620003ff57607f821691505b6020821081036200042057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a557600081815260208120601f850160051c810160208610156200044f5750805b601f850160051c820191505b8181101562000470578281556001016200045b565b505050505050565b81516001600160401b03811115620004945762000494620002aa565b620004ac81620004a58454620003ea565b8462000426565b602080601f831160018114620004e45760008415620004cb5750858301515b600019600386901b1c1916600185901b17855562000470565b600085815260208120601f198616915b828110156200051557888601518255948401946001909101908401620004f4565b5085821015620005345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200019557634e487b7160e01b600052601160045260246000fd5b602081526000825180602084015262000587816040850160208701620002c0565b601f01601f19169190910160400192915050565b80516020808301519190811015620004205760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516112816200061b6000396000610493015260006104680152600061093101526000610909015260006108640152600061088e015260006108b801526112816000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806339509351116100ad57806395d89b411161007157806395d89b4114610295578063a457c2d71461029d578063a9059cbb146102b0578063d505accf146102c3578063dd62ed3e146102d657600080fd5b8063395093511461020a5780636574b3591461021d57806370a082311461023e5780637ecebe001461026757806384b0196e1461027a57600080fd5b80630db474fa116100f45780630db474fa146101a057806318160ddd146101c857806323b872dd146101da578063313ce567146101ed5780633644e5151461020257600080fd5b8063043531b11461012657806306fdde031461013b578063095ea7b3146101595780630ce83a611461017c575b600080fd5b610139610134366004610f3c565b600a55565b005b6101436102e9565b6040516101509190610f9b565b60405180910390f35b61016c610167366004610fca565b61037b565b6040519015158152602001610150565b61013961018a366004611005565b6009805460ff191660ff92909216919091179055565b6101396101ae366004611020565b600980549115156101000261ff0019909216919091179055565b6002545b604051908152602001610150565b61016c6101e8366004611042565b610395565b60095460405160ff9091168152602001610150565b6101cc61040b565b61016c610218366004610fca565b61041a565b61013961022b366004611020565b600b805460ff1916911515919091179055565b6101cc61024c36600461107e565b6001600160a01b031660009081526020819052604090205490565b6101cc61027536600461107e565b61043c565b61028261045a565b6040516101509796959493929190611099565b6101436104e3565b61016c6102ab366004610fca565b6104f2565b61016c6102be366004610fca565b61057d565b6101396102d136600461112f565b61058b565b6101cc6102e4366004611199565b6106ef565b6060600380546102f8906111cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610324906111cc565b80156103715780601f1061034657610100808354040283529160200191610371565b820191906000526020600020905b81548152906001019060200180831161035457829003601f168201915b5050505050905090565b60003361038981858561071a565b60019150505b92915050565b600954600090610100900460ff166103b9576103b284848461083e565b9050610404565b6000600a54836103c99190611216565b600b5490915060009060ff166103e8576103e38285611238565b6103f2565b6103f2828561124b565b90506103ff86868361083e565b925050505b9392505050565b6000610415610857565b905090565b60003361038981858561042d83836106ef565b6104379190611238565b61071a565b6001600160a01b03811660009081526007602052604081205461038f565b60006060808280808361048e7f00000000000000000000000000000000000000000000000000000000000000006005610982565b6104b97f00000000000000000000000000000000000000000000000000000000000000006006610982565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102f8906111cc565b6000338161050082866106ef565b9050838110156105655760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610572828686840361071a565b506001949350505050565b600033610389818585610a2d565b834211156105db5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161055c565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861060a8c610bd3565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061066582610bfb565b9050600061067582878787610c28565b9050896001600160a01b0316816001600160a01b0316146106d85760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161055c565b6106e38a8a8a61071a565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661077c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055c565b6001600160a01b0382166107dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60003361084c858285610c50565b610572858585610a2d565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108b057507f000000000000000000000000000000000000000000000000000000000000000046145b156108da57507f000000000000000000000000000000000000000000000000000000000000000090565b610415604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff831461099c5761099583610cc4565b905061038f565b8180546109a8906111cc565b80601f01602080910402602001604051908101604052809291908181526020018280546109d4906111cc565b8015610a215780601f106109f657610100808354040283529160200191610a21565b820191906000526020600020905b815481529060010190602001808311610a0457829003601f168201915b5050505050905061038f565b6001600160a01b038316610a915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055c565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055c565b6001600160a01b03831660009081526020819052604090205481811015610b6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061038f610c08610857565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610c3987878787610d03565b91509150610c4681610dc7565b5095945050505050565b6000610c5c84846106ef565b90506000198114610bcd5781811015610cb75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055c565b610bcd848484840361071a565b60606000610cd183610f14565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d3a5750600090506003610dbe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d8e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610db757600060019250925050610dbe565b9150600090505b94509492505050565b6000816004811115610ddb57610ddb61125e565b03610de35750565b6001816004811115610df757610df761125e565b03610e445760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161055c565b6002816004811115610e5857610e5861125e565b03610ea55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161055c565b6003816004811115610eb957610eb961125e565b03610f115760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161055c565b50565b600060ff8216601f81111561038f57604051632cd44ac360e21b815260040160405180910390fd5b600060208284031215610f4e57600080fd5b5035919050565b6000815180845260005b81811015610f7b57602081850181015186830182015201610f5f565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104046020830184610f55565b80356001600160a01b0381168114610fc557600080fd5b919050565b60008060408385031215610fdd57600080fd5b610fe683610fae565b946020939093013593505050565b803560ff81168114610fc557600080fd5b60006020828403121561101757600080fd5b61040482610ff4565b60006020828403121561103257600080fd5b8135801515811461040457600080fd5b60008060006060848603121561105757600080fd5b61106084610fae565b925061106e60208501610fae565b9150604084013590509250925092565b60006020828403121561109057600080fd5b61040482610fae565b60ff60f81b881681526000602060e0818401526110b960e084018a610f55565b83810360408501526110cb818a610f55565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561111d57835183529284019291840191600101611101565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561114a57600080fd5b61115388610fae565b965061116160208901610fae565b9550604088013594506060880135935061117d60808901610ff4565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156111ac57600080fd5b6111b583610fae565b91506111c360208401610fae565b90509250929050565b600181811c908216806111e057607f821691505b602082108103610bf557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008261123357634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561038f5761038f611200565b8181038181111561038f5761038f611200565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000813000a";

type TestERC20FeeOnTransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20FeeOnTransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20FeeOnTransfer__factory extends ContractFactory {
  constructor(...args: TestERC20FeeOnTransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<TestERC20FeeOnTransfer> {
    return super.deploy(
      name,
      symbol,
      totalSupply,
      overrides || {}
    ) as Promise<TestERC20FeeOnTransfer>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): TestERC20FeeOnTransfer {
    return super.attach(address) as TestERC20FeeOnTransfer;
  }
  override connect(signer: Signer): TestERC20FeeOnTransfer__factory {
    return super.connect(signer) as TestERC20FeeOnTransfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20FeeOnTransferInterface {
    return new utils.Interface(_abi) as TestERC20FeeOnTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20FeeOnTransfer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestERC20FeeOnTransfer;
  }
}
